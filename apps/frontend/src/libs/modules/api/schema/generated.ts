/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type $defs = Record<string, never>;
export interface components {
	headers: never;
	parameters: never;
	pathItems: never;
	requestBodies: never;
	responses: {
		/** @description Bad request */
		BadRequestError: {
			content: {
				"application/json": components["schemas"]["Error"];
			};
			headers: {
				[name: string]: unknown;
			};
		};
		/** @description Unauthorized */
		UnauthorizedError: {
			content: {
				"application/json": components["schemas"]["Error"];
			};
			headers: {
				[name: string]: unknown;
			};
		};
	};
	schemas: {
		AuthResponse: {
			token: string;
			user: components["schemas"]["User"];
		};
		Error: {
			errorType: string;
			message: string;
		};
		User: {
			/** Format: email */
			email: string;
			id: string;
			name: string;
		};
		UserSignInRequestDto: {
			/** Format: email */
			email: string;
			password: string;
		};
		UserSignUpRequestDto: {
			/** Format: email */
			email: string;
			name: string;
			/** Format: password */
			password: string;
		};
	};
}
export type operations = Record<string, never>;
export interface paths {
	"/auth/login": {
		delete?: never;
		get?: never;
		head?: never;
		options?: never;
		parameters: {
			cookie?: never;
			header?: never;
			path?: never;
			query?: never;
		};
		patch?: never;
		/** Login user */
		post: {
			parameters: {
				cookie?: never;
				header?: never;
				path?: never;
				query?: never;
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["UserSignInRequestDto"];
				};
			};
			responses: {
				/** @description Login successful */
				201: {
					content: {
						"application/json": components["schemas"]["AuthResponse"];
					};
					headers: {
						[name: string]: unknown;
					};
				};
				401: components["responses"]["UnauthorizedError"];
			};
		};
		put?: never;
		trace?: never;
	};
	"/auth/register": {
		delete?: never;
		get?: never;
		head?: never;
		options?: never;
		parameters: {
			cookie?: never;
			header?: never;
			path?: never;
			query?: never;
		};
		patch?: never;
		/** Sign up a new user */
		post: {
			parameters: {
				cookie?: never;
				header?: never;
				path?: never;
				query?: never;
			};
			requestBody: {
				content: {
					"application/json": components["schemas"]["UserSignUpRequestDto"];
				};
			};
			responses: {
				/** @description Successful operation */
				201: {
					content: {
						"application/json": components["schemas"]["AuthResponse"];
					};
					headers: {
						[name: string]: unknown;
					};
				};
				400: components["responses"]["BadRequestError"];
			};
		};
		put?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
